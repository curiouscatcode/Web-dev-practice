### **Simplified Blog API (Without Authentication & Security)**  

You need to build a **basic Blogging API** where users can create, read, update, and delete blog posts. The API should include the following functionalities:  

---

### **1. Blog Post Management (CRUD for Blog Posts)**  
- **Create a blog post** with `title`, `content`, `author`, and `published_status` (true/false).  
- **Update a blog post** (anyone can edit for now).  
- **Delete a blog post** (anyone can delete for now).  
- **Fetch all blog posts** (with pagination).  
- **Fetch a single blog post by ID**.  
- **Filter blog posts** by `author` or `published_status`.  

---

### **2. Comments & Likes**  
- Users can **add a comment** to a blog post.  
- Users can **edit or delete** their comments.  
- Users can **like a blog post**.  
- Fetch all comments for a blog post.  

---

### **Database Tables (PostgreSQL)**  
- `blogs (id, title, content, author, published_status, created_at)`  
- `comments (id, blog_id, user, text, created_at)`  
- `likes (id, blog_id, user, created_at)`  

---

### **Tech Stack**  
- **Express.js** for API.  
- **PostgreSQL** for database.  

---

ðŸ’¡ **Goal:**  
- Proper CRUD operations with PostgreSQL.  
- Handle errors properly (e.g., if a blog post doesnâ€™t exist).  
- Keep it simple and focus on database interactions.  

ðŸ”¥ Start coding! ðŸš€ Let me know if you need hints!