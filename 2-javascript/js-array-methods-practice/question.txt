## 🧠 **Exercise: Basic Array Methods for React**

### 📝 Instructions:

Solve each task **step by step** using JavaScript. These are commonly used when rendering components dynamically or updating state in React.

---

### 📦 Data to work with:

```js
const users = [
  { id: 1, name: "Alice", age: 22 },
  { id: 2, name: "Bob", age: 30 },
  { id: 3, name: "Charlie", age: 18 },
  { id: 4, name: "David", age: 25 },
];
```

---

### 🧪 Tasks:

1. **🗺️ Use `.map()` to get all names in an array:**

```js
// Expected Output: ["Alice", "Bob", "Charlie", "David"]
```

2. **🔍 Use `.filter()` to find users older than 21:**

```js
// Expected Output: [{ id: 1, name: "Alice", ... }, { id: 2, ... }, { id: 4, ... }]
```

3. **🔎 Use `.find()` to get the user with name "Charlie":**

```js
// Expected Output: { id: 3, name: "Charlie", age: 18 }
```

4. **🎯 Use `.some()` to check if anyone is under 18:**

```js
// Expected Output: false
```

5. **📉 Use `.sort()` to sort users by age (ascending):**

```js
// Expected Output: [{ id: 3, ... }, { id: 1, ... }, { id: 4, ... }, { id: 2, ... }]
```

6. **🧮 Use `.reduce()` to calculate total age of all users:**

```js
// Expected Output: 95
```

---

### ✅ Bonus Task:

Make a function `getUserNamesUppercase(users)` that returns **all names in uppercase**, using `map()`.

```js
// Expected Output: ["ALICE", "BOB", "CHARLIE", "DAVID"]
```